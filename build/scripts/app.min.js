window.addEventListener("DOMContentLoaded",()=>{function e(e){var t=window.innerWidth-document.body.clientWidth+"px";!0===e?(document.body.classList.add("_lock"),document.body.style.paddingRight=t):!1===e?(document.body.classList.remove("_lock"),document.body.style.paddingRight=0):void 0===e?body.classList.contains("_lock")?(document.body.classList.remove("_lock"),document.body.style.paddingRight=0):(document.body.classList.add("_lock"),document.body.style.paddingRight=t):console.error("Неопределенный аргумент у функции bodyLock()")}if(document.querySelectorAll("[data-crop]").forEach(e=>{var t=e.textContent,r=e.dataset.crop;t.length>r&&(t=t.substring(0,r).trim()+"...",e.textContent=t)}),new Swiper(".main-slider__inner",{slidesPerView:1,spaceBetween:110,freeMode:!1,loop:!1,pagination:{el:".swiper-pagination"}}),document.querySelector(".catalog__sort-wrap")){const a=document.querySelector(".catalog__sort-wrap"),n=document.querySelector(".curr-sort"),u=(document.querySelector(".catalog__choose-sorts"),document.querySelectorAll(".catalog__choose-sort"));a.addEventListener("click",()=>{a.classList.contains("openedSorts")?a.classList.remove("openedSorts"):a.classList.add("openedSorts")}),u.forEach(e=>{e.addEventListener("click",()=>{n.textContent=e.textContent})})}if(document.querySelector(".item")){const m=new Swiper(".item__slider-nav",{slidesPerView:3,spaceBetween:30,loop:!1,centeredSlides:!1,slideToClickedSlide:!0,direction:"vertical"});var t=document.querySelector(".nav-slider-prev"),r=document.querySelector(".nav-slider-next"),c=(r.addEventListener("click",()=>{m.slidePrev()}),t.addEventListener("click",()=>{m.slideNext()}),document.querySelectorAll(".item__slider-nav .swiper-slide").length);c<4&&(t.classList.add("hidden"),r.classList.add("hidden")),new Swiper(".item__slider-main",{slidesPerView:1,slideToClickedSlide:!0,navigation:{nextEl:".main-slider-next",prevEl:".main-slider-prev"},thumbs:{swiper:m}})}if(document.querySelector(".recommended")){const v=new Swiper(".recommended .swiper",{slidesPerView:4,slideToClickedSlide:!1,spaceBetween:30,loop:!0,autoplay:{delay:3e3},speed:500});var o=document.querySelector(".recommended .arr-l"),i=document.querySelector(".recommended .arr-r");o.addEventListener("click",()=>{v.slidePrev()}),i.addEventListener("click",()=>{v.slideNext()})}if(document.querySelector(".related")){const p=new Swiper(".related .swiper",{slidesPerView:4,slideToClickedSlide:!1,spaceBetween:30,loop:!0,autoplay:{delay:3e3},speed:500});o=document.querySelector(".related .arr-l"),i=document.querySelector(".related .arr-r");o.addEventListener("click",()=>{p.slidePrev()}),i.addEventListener("click",()=>{p.slideNext()})}if(document.querySelector(".item__desc")){const y=document.querySelectorAll(".item__tab"),S=document.querySelectorAll(".item__desc-block");y.forEach(e=>{e.addEventListener("click",()=>{const t=e.dataset.tab;y.forEach(e=>e.classList.remove("activeTab")),e.classList.add("activeTab"),S.forEach(e=>{e.classList.remove("activeBlock"),e.dataset.tab==t&&e.classList.add("activeBlock")})})})}document.querySelectorAll(".desc-link").forEach(e=>{e.addEventListener("click",()=>{gsap.to(window,{duration:1,scrollTo:{y:".item__desc"}})})});{const L=document.querySelector(".headerSearchBtn"),h=document.querySelector(".openFilters"),_=document.querySelector(".header__search-close"),w=document.querySelector(".header__filters-close"),q=document.querySelector(".header__search-wrap"),f=document.querySelector(".header__filters-wrap"),E=document.querySelector(".header__bottom"),k=document.querySelector(".overlay");L&&L.addEventListener("click",()=>{q.classList.add("activeSearchWrap"),E.classList.add("activeWrap"),e(!0),k.classList.add("activeOverlay")}),_.addEventListener("click",()=>{q.classList.remove("activeSearchWrap"),E.classList.remove("activeWrap"),e(!1),k.classList.remove("activeOverlay")}),h&&h.addEventListener("click",()=>{f.classList.add("activeFiltersWrap"),E.classList.add("activeWrap"),k.classList.add("activeOverlay")}),w.addEventListener("click",()=>{f.classList.remove("activeFiltersWrap"),E.classList.remove("activeWrap"),k.classList.remove("activeOverlay")}),k.addEventListener("click",()=>{q.classList.remove("activeSearchWrap"),E.classList.remove("activeWrap"),f.classList.remove("activeFiltersWrap"),E.classList.remove("activeWrap"),e(!1),k.classList.remove("activeOverlay")})}document.querySelector(".filters")&&(t=(c=document.querySelector(".filters")).offsetHeight,(t=document.documentElement.clientHeight-t-50)<0&&(c.style.top=t+"px"),window.addEventListener("resize",function(e){var t=document.querySelector(".filters"),r=t.offsetHeight,r=document.documentElement.clientHeight-r-50;r<0&&(t.style.top=r+"px")})),document.querySelector(".filters")&&(r=document.querySelectorAll(".open-filter"),o=document.querySelectorAll(".close-filter"),r.forEach(e=>e.classList.add("hidden")),r.forEach(r=>{r.addEventListener("click",()=>{var e=r.closest(".filter"),t=e.querySelector(".filter__wrap"),e=e.querySelector(".close-filter");t.classList.remove("closedFilter"),r.classList.add("hidden"),e.classList.remove("hidden")})}),o.forEach(r=>{r.addEventListener("click",()=>{var e=r.closest(".filter"),t=e.querySelector(".filter__wrap"),e=e.querySelector(".open-filter");t.classList.add("closedFilter"),r.classList.add("hidden"),e.classList.remove("hidden")})})),(i=document.querySelectorAll(".colorFilter")).forEach(t=>{t.addEventListener("mouseover",()=>{var e;""!=t.dataset.color&&((e=document.createElement("span")).classList.add("colorTooltip"),e.textContent=t.dataset.color,t.appendChild(e))})}),i.forEach(t=>{t.addEventListener("mouseleave",()=>{t.querySelector(".colorTooltip")&&(tooltips=t.querySelectorAll(".colorTooltip")).forEach(e=>{t.removeChild(e)})})});var l=document.querySelector(".filter__price");if(l){var d=parseInt(l.dataset.min),s=parseInt(l.dataset.max);noUiSlider.create(l,{start:[d,s],connect:!0,range:{min:d,max:s}});const g=[document.querySelector(".priceMin"),document.querySelector(".priceMax")];l.noUiSlider.on("update",function(e,t){e=Math.round(e[t]);g[t].value=e})}window.innerWidth<600&&new Swiper(".main-blog__inner",{slidesPerView:1,spaceBetween:30,loop:!1,autoplay:{delay:3e3},speed:500,pagination:{el:".swiper-pagination",clickable:!0}})});
//# sourceMappingURL=data:application/json;charset=utf8;base64,
